CREATE TABLE ACTORES_JFNA(
    ACTOR_ID NUMBER(7) CONSTRAINT ACTOR_PK PRIMARY KEY,
    NOMBRE VARCHAR(50) CONSTRAINT ACTOR_NOMBRE_NN NOT NULL,
    APATERNO VARCHAR(50) CONSTRAINT ACTOR_APATERNO_NN NOT NULL,
    AMATERNO VARCHAR(50) CONSTRAINT ACTOR_AMATERNO_NN NOT NULL,
    CORREO VARCHAR(100) 
    CONSTRAINT ACTORES_CORREO_NN NOT NULL
    CONSTRAINT ACTORES_CORREO_UK UNIQUE,
    GENERO VARCHAR(10) CONSTRAINT ACTOR_GENERO_NN NOT NULL,
    FECHA_DE_NAC DATE CONSTRAINT ACTOR_FECHA_NCA_NN NOT NULL
);

CREATE TABLE TIENDAS_DE_VIDEO_JFNA(
    TIENDA_ID NUMBER(5) CONSTRAINT TIENDA_PK PRIMARY KEY,
    NOMBRE VARCHAR(50) CONSTRAINT TIENDA_NOMBRE_NN NOT NULL,
    DIRECCION VARCHAR(100) CONSTRAINT TIENDA_DIRECCION_NN NOT NULL,
    TELEFONO CHAR(10) CONSTRAINT TIENDA_TEL_NN NOT NULL,
    CORREO VARCHAR(100) 
    CONSTRAINT TIENDA_CORREO_NN NOT NULL
    CONSTRAINT TIENDA_CORREO_UK UNIQUE
);

CREATE TABLE CODIGOS_DE_GENERO_JFNA(
    CODIGO CHAR(3) CONSTRAINT CODIGO_DE_GENERO_PK PRIMARY KEY,
    DESCRIPCION VARCHAR(200)
);

CREATE TABLE LENGUAJES_JFNA(
    CODIGO CHAR(2) CONSTRAINT LENGUAJE_PK PRIMARY KEY,
    NOMBRE VARCHAR(50) CONSTRAINT LENGUAJE_NOMBRE_NN NOT NULL
);

CREATE TABLE PELICULAS_JFNA(
    PELICULA_ID NUMBER(9) CONSTRAINT PELICULA_PK PRIMARY KEY,
    CODIGO_DE_GENERO CHAR(3) CONSTRAINT PELICULA_CODIGO_GEN_NN NOT NULL,
    FECHA_DE_LANZAMIENTO DATE CONSTRAINT PELICULA_FEHCA_LAN_NN NOT NULL,
    TITULO VARCHAR(100) CONSTRAINT PELICULA_TITULO_NN NOT NULL,
    DESCRIPCION VARCHAR(200) CONSTRAINT PELICULA_DES_NN NOT NULL,
    PRECIO DECIMAL(6,2) CONSTRAINT PRLICULA_PRECIO_NN NOT NULL,
    CONSTRAINT PELICULA_CODIGOGEN_FK FOREIGN KEY (CODIGO_DE_GENERO) 
    REFERENCES CODIGOS_DE_GENERO_JFNA (CODIGO)
);


CREATE TABLE DISTRIBUCION_PELICULAS_JFNA(
    PELICULA_ID NUMBER(9),
    TIENDA_ID NUMBER(5),
    CANTIDAD_DISPONIBLE NUMBER CONSTRAINT DIS_PELI_NN NOT NULL,
    CONSTRAINT DISTRIBUCCION_PEL_PK PRIMARY KEY (PELICULA_ID,TIENDA_ID),
    CONSTRAINT DISTR_pelicula_fk FOREIGN KEY (PELICULA_ID) 
    REFERENCES PELICULAS_JFNA(PELICULA_ID),
    CONSTRAINT DIST_TIENDA_FK FOREIGN KEY (TIENDA_ID) 
    REFERENCES TIENDAS_DE_VIDEO_JFNA (TIENDA_ID)
);

CREATE TABLE TRADUCCIONES_JFNA(
    CODIGO_LENGUAJE CHAR(2),
    PELICULA_ID NUMBER(9),
    CONSTRAINT TRADUCCION_PK PRIMARY KEY (CODIGO_LENGUAJE,PELICULA_ID),
    CONSTRAINT TRADUCCION_LENGUAJE_FK FOREIGN KEY (CODIGO_LENGUAJE) 
    REFERENCES LENGUAJES_JFNA (CODIGO),
    CONSTRAINT TRADUCCION_PELI_FK FOREIGN KEY (PELICULA_ID) 
    REFERENCES PELICULAS_JFNA (PELICULA_ID)
);

CREATE TABLE ELENCO_JFNA(
    PELICULA_ID NUMBER(9),
    ACTOR_ID NUMBER(7),
    CONSTRAINT ELENCO_PK PRIMARY KEY (PELICULA_ID,ACTOR_ID),
    CONSTRAINT ELENCO_PELICULA_FK FOREIGN KEY (PELICULA_ID) 
    REFERENCES PELICULAS_JFNA(PELICULA_ID),
    CONSTRAINT ELENCO_ACTOR_FK FOREIGN KEY (ACTOR_ID) 
    REFERENCES ACTORES_JFNA (ACTOR_ID)
);

CREATE TABLE ESTADO_DE_RENTA_JFNA(
    CODIGO_ESTADO CHAR(3) CONSTRAINT ESTADO_DE_RENTA_PK PRIMARY KEY,
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE METODOS_DE_PAGO_JFNA(
    CODIGO_METODO CHAR(3) CONSTRAINT METODO_DE_PAGO_PK PRIMARY KEY,
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE TIPOS_TRANSACCIONES_JFNA(
    CODIGO_TRANSACCION CHAR(3) CONSTRAINT TIPO_TRANSACCIONES_PK PRIMARY KEY,
    DESCRIPCION VARCHAR(100)
);

CREATE TABLE CLIENTES_JFNA(
    CLIENTE_ID NUMBER(7) CONSTRAINT CLIENTE_PK PRIMARY KEY,
    NUMERO_MEMBRECIA NUMBER(7) CONSTRAINT CLIENTE_NUM_MEM_NN NOT NULL,
    FECHA_INCIO_MEMBRECIA DATE CONSTRAINT CILENTE_FECHA_INIMEM_NN NOT NULL,
    NOMBRE VARCHAR(100) CONSTRAINT CLIENTE_NOMBRE_NN NOT NULL,
    APATERNO VARCHAR(100) CONSTRAINT CLIENTE_APATERNO_NN NOT NULL,
    AMATERNO VARCHAR(100) CONSTRAINT CLIENTE_APPATERNO_NN NOT NULL,
    DIRECCION VARCHAR(200) CONSTRAINT CLIENTE_DIRECC_NN NOT NULL,
    NUMERO_TELEFONICO CHAR(10),
    CORREO VARCHAR(100)
    CONSTRAINT CLIENTE_CORREO_NN NOT NULL
    CONSTRAINT CLIENTE_CORREO_UK UNIQUE,
    ESTADO VARCHAR(100) CONSTRAINT CLIENTE_ESTADO_NN NOT NULL,
    FECHA_DE_NAC DATE CONSTRAINT CLIENTE_FECHA_DE_NAC_NN NOT NULL
);

CREATE TABLE CUENTAS_JFNA(
    CUENTA_ID NUMBER(9) CONSTRAINT CUENTA_PK PRIMARY KEY,
    CLIENTE_ID NUMBER(7) CONSTRAINT CUENTA_CLIENTEID_NN NOT NULL,
    CODIGO_METODO CHAR(3) CONSTRAINT CUENTAS_CODIGOMET_NN NOT NULL,
    ULTIMA_ENTRADA DATE CONSTRAINT CUENTA_ULTIMA_ENTRADA_NN NOT NULL,
    CONSTRAINT CUENTA_CLIENTE_FK FOREIGN KEY (CLIENTE_ID) 
    REFERENCES CLIENTES_JFNA(CLIENTE_ID),
    CONSTRAINT CUENTA_METODO_FK FOREIGN KEY (CODIGO_METODO) 
    REFERENCES METODOS_DE_PAGO_JFNA(CODIGO_METODO)
);

CREATE TABLE PELICULAS_RENTADAS_JFNA(
    ELEMENTO_RENTADO NUMBER(9) CONSTRAINT PELICULA_RENTADA_PK PRIMARY KEY,
    CLIENTE_ID NUMBER(7) CONSTRAINT PEL_REN_CLIENTEID_NN NOT NULL,
    PELICULA_ID NUMBER(9) CONSTRAINT PEL_REN_PELICULAID_NN NOT NULL,
    CODIGO_ESTADO CHAR(3) CONSTRAINT PEL_REN_ESTADO_NN NOT NULL,
    FECHA_ALQUILER DATE CONSTRAINT PEL_REN_FEHCAALQ_NN NOT NULL,
    FEHCA_DEVLOUCION DATE CONSTRAINT EPL_REN_FEHCADEV_NN NOT NULL,
    ADEUDO_POR_RETRASO DECIMAL(7,2)  CONSTRAINT PEL_REN_ADEUDO_NN NOT NULL,
    CONSTRAINT PEL_REN_PELICULA_FK FOREIGN KEY (PELICULA_ID) 
    REFERENCES PELICULAS_JFNA (PELICULA_ID),
    CONSTRAINT PEL_REN_CLIENTE_FK FOREIGN KEY (CLIENTE_ID) 
    REFERENCES CLIENTES_JFNA (CLIENTE_ID),
    CONSTRAINT PEL_REN_CODEST_FK FOREIGN KEY (CODIGO_ESTADO) 
    REFERENCES ESTADO_DE_RENTA_JFNA (CODIGO_ESTADO)
);
 
CREATE TABLE TRANSACCIONES_JFNA(
    TRANSACCION_ID NUMBER(9) CONSTRAINT TRANSACCION_PK PRIMARY KEY,
    CUENTA_ID NUMBER(9) CONSTRAINT TRANSACCIONE_CUENTA_NN NOT NULL,
    ELEMENTO_RENTADO NUMBER(9) CONSTRAINT TRANSACCION_ELERET_NN NOT NULL,
    TRANSACCION_PREVIA_ID NUMBER(9),
    CODIGO_TRANSACCION CHAR(3) CONSTRAINT TRANSACCION_CODTRA_NN NOT NULL,
    FECHA DATE CONSTRAINT TRANSACCION_DATE_NN NOT NULL,
    CANTIDAD DECIMAL(8,2) CONSTRAINT TRANSACCION_CANTIDAD_NN NOT NULL,
    CONCEPTO VARCHAR(50) CONSTRAINT TRANSACCION_CON_NN NOT NULL,
    CONSTRAINT TRANSACC_CUENTA_FK FOREIGN KEY (CUENTA_ID) 
    REFERENCES CUENTAS_JFNA (CUENTA_ID),
    CONSTRAINT TRNSACC_ELEM_REM_FK FOREIGN KEY (ELEMENTO_RENTADO) 
    REFERENCES PELICULAS_RENTADAS_JFNA (ELEMENTO_RENTADO),
    CONSTRAINT TRANSACC_CODTRANSACC_FK FOREIGN KEY (CODIGO_TRANSACCION) 
    REFERENCES TIPOS_TRANSACCIONES_JFNA (CODIGO_TRANSACCION),
    CONSTRAINT TRANSACC_PREV_FK FOREIGN KEY (TRANSACCION_PREVIA_ID) 
    REFERENCES TRANSACCIONES_JFNA (TRANSACCION_ID)
);

CREATE SEQUENCE ACTOR_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 1000000
    NOCACHE;
    
CREATE SEQUENCE TIENDA_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 1000000
    NOCACHE;

CREATE SEQUENCE PELICULA_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 1000000
    NOCACHE;

CREATE SEQUENCE CLIENTE_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 10000000
    NOCACHE;
    
CREATE SEQUENCE ELEMENTO_RENTADO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 10000000
    NOCACHE;

CREATE SEQUENCE CUENTA_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 1000000
    NOCACHE;  
    
CREATE SEQUENCE TRANSACCION_ID_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 10000000
    NOCACHE;
    
CREATE SYNONYM ACT FOR ACTORES_JFNA;
SELECT * FROM ACT; 
CREATE SYNONYM TIE FOR TIENDAS_DE_VIDEO_JFNA;
SELECT * FROM TIE;
CREATE SYNONYM CDG FOR CODIGOS_DE_GENERO_JFNA;
SELECT * FROM CDG;

CREATE SYNONYM LEN FOR LENGUAJES_JFNA;
SELECT * FROM LEN;

CREATE SYNONYM TRS FOR TRADUCCIONES_JFNA;
SELECT * FROM TRS;

CREATE SYNONYM PEL FOR PELICULAS_JFNA;
SELECT * FROM PEL;

CREATE SYNONYM ELE FOR ELENCO_JFNA;
SELECT * FROM ELE;

CREATE SYNONYM EDR FOR ESTADO_DE_RENTA_JFNA;
SELECT * FROM EDR;

CREATE SYNONYM MDP FOR METODOS_DE_PAGO_JFNA;
SELECT * FROM MDP;

CREATE SYNONYM TTR FOR TIPOS_TRANSACCIONES_JFNA;
SELECT * FROM TTR;

CREATE SYNONYM CLI FOR CLIENTES_JFNA;
SELECT * FROM CLI;

CREATE SYNONYM CUE FOR CUENTAS_JFNA;
SELECT * FROM CUE;

CREATE SYNONYM REN FOR PELICULAS_RENTADAS_JFNA;
SELECT * FROM REN;

CREATE SYNONYM TRN FOR TRANSACCIONES_JFNA;
SELECT * FROM TRN;

CREATE SYNONYM DIS FOR DISTRIBUCION_PELICULAS_JFNA;
SELECT * FROM DIS;


INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Tom','Holland','Holland',
'tomh@gmail.com','Masculino','01/06/1996');

INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Andrew','Garfiled','Garfiled',
'andgfld333@gmail.com','Masculino','20/09/1983');

INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Tobey','Maguire','Maguire',
'tob@gmail.com','Masculino','27/06/1975');

INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Eugenio','Gónzales','Derbez',
'eugeniodbz@gmail.com','Masculino','02/08/1961');

INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Karla','Susana','Olivares',
'ksusana@gmail.com','Femenino','11/12/1985');

INSERT INTO ACT VALUES(ACTOR_ID_SEQ.NEXTVAL,'Loreto','Peralta',
'Jacobson','loreto@gmail.com','Femenino','09/06/2004');

INSERT INTO TIE VALUES (TIENDA_ID_SEQ.NEXTVAL,'MixUp Movie center',
'Calle 10 132, San Pedro de Los Pinos, 01180 Ciudad de México, D.F.','4921322033',
'comMixUpMC@gmail.com');

INSERT INTO TIE VALUES (TIENDA_ID_SEQ.NEXTVAL,'Plaza MixUp',
'Carretera México -Toluca Km. 50, San Pedro Cholula, 52000 Lerma, MEX, Mexico',
'4921322034','plazaMixUpMC@gmail.com');

INSERT INTO TIE VALUES (TIENDA_ID_SEQ.NEXTVAL,'Linda Vista Movie Center',
'Colector Magdalena de Las Salinas, Mexico City, C.P. 7760, Federal District, Mexico',
'4921322035','lindavistaMC@gmail.com');

INSERT INTO TIE VALUES (TIENDA_ID_SEQ.NEXTVAL,'Plaz de Mayo Movie center',
'Circuito Centro Comercial No.2251, Ciudad Satélite, 53100 Naucalpan de Juárez, MEX',
'4921322036','plazademayoMC@gmail.com');

INSERT INTO TIE VALUES (TIENDA_ID_SEQ.NEXTVAL,'El Peliculon',
'Boulevard a Zacatecas Km. 537, Trojes de Alonso, 20116 Aguascalientes, AGS, Mexiko',
'4921322077','elpliculonMC@gmail.com');

INSERT INTO CDG VALUES ('ACC','Acción');
INSERT INTO CDG VALUES ('AVE','Aventura');
INSERT INTO CDG VALUES ('CIF','Cíencia ficción');
INSERT INTO CDG VALUES ('COM','Comedia');
INSERT INTO CDG VALUES ('DRA','Drama');
INSERT INTO CDG VALUES ('MUS','MUSICALES');
INSERT INTO CDG VALUES ('KID','Niños');


INSERT INTO LEN VALUES ('ES', 'Español');
INSERT INTO LEN VALUES ('AR', 'Árabe');
INSERT INTO LEN VALUES ('EN', 'Inglés');
INSERT INTO LEN VALUES ('IT', 'Italiano');
INSERT INTO LEN VALUES ('FR', 'Francés');

INSERT INTO PEL VALUES (PELICULA_ID_SEQ.NEXTVAL,'ACC','11/10/2021',
'Spider Man No Way Home','Some random description',10,300.00);

INSERT INTO PEL VALUES (PELICULA_ID_SEQ.NEXTVAL,'ACC','11/10/2021',
'SBatman II','Some random description',20,300.00);

INSERT INTO PEL VALUES (PELICULA_ID_SEQ.NEXTVAL,'COM','11/10/2012',
'No se aceptan devoluciones','Some random description',10,300.00);

INSERT INTO PEL VALUES (PELICULA_ID_SEQ.NEXTVAL,'COM','11/10/2019',
'Chiclos Buenos','Some random description',10,400.00);

INSERT INTO PEL VALUES (PELICULA_ID_SEQ.NEXTVAL,'KID','11/10/2010',
'Sponge Bob La película','Some random description',10,100.00);

INSERT INTO TRS VALUES ('ES',1);
INSERT INTO TRS VALUES ('EN',1);
INSERT INTO TRS VALUES ('AR',1);
INSERT INTO TRS VALUES ('FR',1);
INSERT INTO TRS VALUES ('IT',1);
INSERT INTO TRS VALUES ('ES',4);
INSERT INTO TRS VALUES ('EN',4);
INSERT INTO TRS VALUES ('EN',3);
INSERT INTO TRS VALUES ('EN',6);

INSERT INTO ELE VALUES (1,1);
INSERT INTO ELE VALUES (1,2);
INSERT INTO ELE VALUES (1,3);
INSERT INTO ELE VALUES (3,4);
INSERT INTO ELE VALUES (3,5);
INSERT INTO ELE VALUES (3,6);
INSERT INTO ELE VALUES (3,1);

INSERT INTO DIS VALUES (1,1,10);
INSERT INTO DIS VALUES (1,2,20);
INSERT INTO DIS VALUES (3,1,10);
INSERT INTO DIS VALUES (3,4,15);
INSERT INTO DIS VALUES (4,1,10);

INSERT INTO EDR VALUES ('DEV','Devuelto');
INSERT INTO EDR VALUES ('RET','Restasado');
INSERT INTO EDR VALUES ('PRE','Prestado');

INSERT INTO MDP VALUES ('DIF','Dinero físico');
INSERT INTO MDP VALUES ('TAR','Tarjeta de crédito');
INSERT INTO MDP VALUES ('CRI','Cripto monedas');
INSERT INTO MDP VALUES ('PGR', 'Pagaré');
INSERT INTO MDP VALUES ('SEQ', 'SeQura');

INSERT INTO TTR VALUES ('PAY', 'Pago');
INSERT INTO TTR VALUES ('REF', 'Renvolso');
INSERT INTO TTR VALUES ('SUP', 'Suscripción');

INSERT INTO CLI VALUES (CLIENTE_ID_SEQ.NEXTVAL,1,'12/01/2015','Juan','Navarro',
'Ambriz','Some random address','4921326600','juan@gmail.com','Zacatecas','07/11/2001');

INSERT INTO CLI VALUES (CLIENTE_ID_SEQ.NEXTVAL,2,'12/01/2016','Pablo','Ibarra','Ambriz',
'Some random address','4921326601','pablo@gmail.com','Zacatecas','07/11/2001');

INSERT INTO CLI VALUES (CLIENTE_ID_SEQ.NEXTVAL,3,'12/01/2017','Elena','Torres','Valles',
'Some random address','4921326602','elena@gmail.com','Zacatecas','07/11/2002');

INSERT INTO CLI VALUES (CLIENTE_ID_SEQ.NEXTVAL,4,'13/01/2017','Ximena','Palafox',
'Tovar','Some random address','4921326603','ximena@gmail.com','Durango','07/11/2002');

INSERT INTO CLI VALUES (CLIENTE_ID_SEQ.NEXTVAL,5,'14/01/2019','Juan','Gómez','Pérez',
'Some random address','4921326604','juanGomez@gmail.com','Durango','07/11/2002');

INSERT INTO CUE VALUES (CUENTA_ID_SEQ.NEXTVAL,1,'DIF','25/06/2022');
INSERT INTO CUE VALUES (CUENTA_ID_SEQ.NEXTVAL,1,'CRI','27/06/2022');
INSERT INTO CUE VALUES (CUENTA_ID_SEQ.NEXTVAL,2,'TAR','28/06/2022');
INSERT INTO CUE VALUES (CUENTA_ID_SEQ.NEXTVAL,3,'TAR','28/06/2022');
INSERT INTO CUE VALUES (CUENTA_ID_SEQ.NEXTVAL,4,'TAR','29/06/2022');

INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,1,1,'DEV','16/01/2019','26/01/2019',10.00);
INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,1,2,'DEV','17/01/2019','27/01/2019',10.00);
INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,2,1,'DEV','16/02/2019','26/02/2019',50.00);
INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,3,1,'DEV','16/03/2019','26/03/2019',70.00);
INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,1,4,'RET','16/05/2019','01/06/2019',10.00);
INSERT INTO REN VALUES (ELEMENTO_RENTADO.NEXTVAL,1,1,'DEV','17/05/2019','17/06/2019',10.00);

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,1,3,NULL,'PAY','16/01/2019',
10.00,'Pago de la renta de una pelicula');

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,1,4,1,'PAY','17/01/2019',10.00,
'Pago de la renta de una pelicula');

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,3,5,NULL,'PAY','16/02/2019',50.00,
'Pago de la renta de una pelicula');

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,4,6,NULL,'PAY','16/03/2019',
60.00,'abono al pago de la renta de una pelicula');

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,4,6,4,'PAY','18/03/2019',10.00,
'Restante del pago de la renta de la pelicual');

INSERT INTO TRN VALUES (TRANSACCION_ID_SEQ.NEXTVAL,1,7,2,'PAY','16/05/2019',10.00,
'Pago de la renta de una pelicula');


/* CUADERNILLO DE CONSULTAS */

/* ¿Cuáles son los nombres de los géneros de películas que menos populares son? (aquellos géneros que menos aparecen en las películas) */


SELECT DESCRIPCION FROM CDG WHERE 
CODIGO IN 
(
SELECT PEL.CODIGO_DE_GENERO FROM PEL
GROUP BY CODIGO_DE_GENERO HAVING COUNT(*) = 
(SELECT MIN(COUNT(*)) AS MIN_APARICIONES FROM PEL GROUP BY CODIGO_DE_GENERO)
);



/* ¿Cuáles son los nombres de los géneros de películas que más populares son? (aquellos géneros que más aparecen en las películas) */

SELECT DESCRIPCION FROM CDG WHERE 
CODIGO IN 
(
SELECT PEL.CODIGO_DE_GENERO FROM PEL
GROUP BY CODIGO_DE_GENERO HAVING COUNT(*) = 
(SELECT MAX(COUNT(*)) AS MIN_APARICIONES FROM PEL GROUP BY CODIGO_DE_GENERO)
);

/* ¿Cuáles son los nombres de los géneros de película que no han sido usados? */

SELECT DESCRIPCION FROM CDG WHERE CODIGO NOT IN 
( SELECT CODIGO_DE_GENERO FROM PEL );

/* Muestra el nombre de las películas las cuales no han sido rentadas. */
SELECT TITULO FROM PEL WHERE PELICULA_ID NOT IN (SELECT DISTINCT PELICULA_ID FROM REN);

/* Muestra el género de las películas, así como el precio más bajo y más alto de cada género. */

SELECT CODIGO_DE_GENERO,MAX(PRECIO) AS PRECIO_MAXIMO, MIN(PRECIO) 
AS PRECIO_MINIMO FROM PEL GROUP BY CODIGO_DE_GENERO;

/* Muestra el nombre completo de cada artista, así como la edad actual de cada uno de los artistas (esto con respecto a la fecha actual) */

SELECT NOMBRE || ' ' || APATERNO AS "NOMBRE COMPLETO", 
TRUNC(MONTHS_BETWEEN(SYSDATE,FECHA_DE_NAC)/12) AS "EDAD ACTUAL" FROM ACT;

/* Muestra el nombre completo de los artistas con menor y mayor edad. */

SELECT  NOMBRE || ' ' || APATERNO AS "NOMBRE COMPLETO" FROM ACT
WHERE FECHA_DE_NAC = ( SELECT MAX(FECHA_DE_NAC) FROM ACT ) 
OR FECHA_DE_NAC = (SELECT MIN(FECHA_DE_NAC) FROM ACT);

/* Muestra el lenguaje más popular de traducción de películas */

SELECT NOMBRE FROM LEN WHERE CODIGO IN 
(
    SELECT CODIGO_LENGUAJE FROM TRA GROUP BY CODIGO_LENGUAJE HAVING COUNT(*) = 
    (
        SELECT MAX(COUNT(CODIGO_LENGUAJE)) FROM TRA GROUP BY CODIGO_LENGUAJE
    )
);


/* Muestra el nombre completo de los artistas, así como el nombre de las películas en las cuales 
ha participado cada uno de ellos y ordena los resultados por nombre de forma descendente esto con respecto al alfabeto. */

SELECT NOMBRE || ' ' || APATERNO AS "NOMBRE COMPLETO", PEL.TITULO FROM ELE
JOIN ACT ON ACT.ACTOR_ID=ELE.ACTOR_ID
JOIN PEL ON PEL.PELICULA_ID=ELE.PELICULA_ID ORDER BY NOMBRE DESC;


/* Muestra el nombre completo del cliente que ha rentado más películas */

SELECT NOMBRE || ' ' || APATERNO || ' ' || AMATERNO AS "NOMBRE COMPLETO" FROM CLI WHERE
CLIENTE_ID IN
(
    SELECT REN.CLIENTE_ID FROM REN JOIN CLI ON REN.CLIENTE_ID=CLI.CLIENTE_ID GROUP BY 
    REN.CLIENTE_ID HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM REN  GROUP BY CLIENTE_ID)
);




/* Muestra el nombre completo de los clientes que siempre ha devuelto las películas rentadas a tiempo */

SELECT NOMBRE || ' ' || APATERNO || ' ' || AMATERNO AS "NOMBRE COMPLETO"
FROM CLI WHERE CLIENTE_ID NOT IN (SELECT CLIENTE_ID FROM REN WHERE CODIGO_ESTADO='RET')
AND CLIENTE_ID IN (SELECT DISTINCT CLIENTE_ID FROM REN);


/* Muestra el nombre completo del cliente y de la película que haya sido rentada por un mismo cliente más de una vez */

SELECT CLI.NOMBRE || ' ' || CLI.APATERNO || ' ' || CLI.AMATERNO AS "NOMBRE COMPLETO",
PEL.TITULO FROM REN 
JOIN CLI ON CLI.CLIENTE_ID=REN.CLIENTE_ID 
JOIN PEL ON PEL.PELICULA_ID=REN.PELICULA_ID 
GROUP BY
CLI.NOMBRE,CLI.APATERNO,CLI.AMATERNO,PEL.TITULO
HAVING COUNT(*)>=2;


/* Muestra el nombre completo del cliente, su id de cuenta, su método favorito de pago y el concepto de todas las transacciones que ha realizado. */

SELECT cli.NOMBRE || ' ' || CLI.APATERNO || ' ' || CLI.AMATERNO AS "NOMBRE COMPLETO" 
,CUE.CUENTA_ID,MDP.DESCRIPCION, TRN.CONCEPTO FROM CLI
JOIN CUE ON CUE.CLIENTE_ID=CLI.CLIENTE_ID
JOIN MDP ON MDP.CODIGO_METODO=CUE.CODIGO_METODO
JOIN TRN ON TRN.CUENTA_ID=CUE.CUENTA_ID ORDER BY CLI.NOMBRE;

/* Muestra el nombre de los géneros de películas que más han sido rentados.  */

SELECT CDG.DESCRIPCION FROM REN
JOIN PEL ON REN.PELICULA_ID=PEL.PELICULA_ID
JOIN CDG ON PEL.CODIGO_DE_GENERO=CDG.CODIGO
GROUP BY CDG.DESCRIPCION HAVING COUNT(*) = 
(
    SELECT MAX(COUNT(*)) FROM REN
    JOIN PEL ON REN.PELICULA_ID=PEL.PELICULA_ID
    JOIN CDG ON PEL.CODIGO_DE_GENERO=CDG.CODIGO
    GROUP BY CDG.DESCRIPCION
);

/* Muestra el nombre completo de los o el cliente que haya rentado una película en la cual Tom Holland fue parte del elenco. */

SELECT cli.NOMBRE || ' ' || CLI.APATERNO || ' ' || CLI.AMATERNO AS "NOMBRE COMPLETO"
FROM CLI WHERE CLI.CLIENTE_ID IN 
(
    SELECT DISTINCT CLIENTE_ID  FROM REN WHERE REN.PELICULA_ID IN
    (
        SELECT DISTINCT ELE.PELICULA_ID FROM ELE
        JOIN ACT ON ELE.ACTOR_ID=ACT.ACTOR_ID
        WHERE ACT.NOMBRE='Tom' AND ACT.APATERNO='Holland'
    )
);

/* Muestra el número de transacciones que se ha hecho para pagar rentas de películas en las cueles haya participado Tom Holland. */

SELECT COUNT(*) AS NUMERO_TRANSACCIONES FROM REN
JOIN PEL ON REN.PELICULA_ID=PEL.PELICULA_ID
JOIN ELE ON ELE.PELICULA_ID=PEL.PELICULA_ID
JOIN ACT ON ELE.ACTOR_ID=ACT.ACTOR_ID
JOIN TRN ON TRN.ELEMENTO_RENTADO=REN.ELEMENTO_RENTADO
WHERE ACT.NOMBRE='Tom' AND ACT.APATERNO='Holland';

/* Muestra el precio y el nombre de las películas las cuales estén traducidas al español y además sean películas en las que haya participado Eugenio Derbez.*/

SELECT PEL.TITULO,PEL.PRECIO FROM  ELE 
JOIN ACT ON ELE.ACTOR_ID=ACT.ACTOR_ID
JOIN PEL ON PEL.PELICULA_ID=ELE.PELICULA_ID
JOIN TRS ON TRS.PELICULA_ID=PEL.PELICULA_ID
WHERE ACT.NOMBRE='Eugenio' AND ACT.APATERNO='Gónzales' 
AND AMATERNO='Derbez' AND TRS.CODIGO_LENGUAJE='EN';

